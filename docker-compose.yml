version: "3.9"

services:
  rewards-platform:
    build: .
    container_name: rewards-platform
    user: root
    restart: unless-stopped
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - FLASK_DEBUG=False
      - DATABASE_URL=postgresql://rewards_user:rewards_pass@postgres:5432/rewards_db
    volumes:
      - rewards_logs:/app/logs
    networks:
      - rewards-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: rewards-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: rewards_user
      POSTGRES_PASSWORD: rewards_pass
      POSTGRES_DB: rewards_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rewards-network

  nginx:
    image: nginx:alpine
    container_name: rewards-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - rewards-platform
    networks:
      - rewards-network
    profiles:
      - nginx

  redis:
    image: redis:alpine
    container_name: rewards-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - rewards-network
    profiles:
      - cache

volumes:
  rewards_logs:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  rewards-network:
    driver: bridge
